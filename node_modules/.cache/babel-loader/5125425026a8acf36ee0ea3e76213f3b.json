{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\new project\\\\new-project\\\\src\\\\components\\\\apiData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './apiData.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport XMLParser from 'react-xml-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetData = () => {\n  _s();\n\n  const [apiData, setApiData] = useState(); // const [dddd, setDDDDD] = useState();\n\n  const api = 'https://front-end-test-bvhzjr6b6a-uc.a.run.app';\n  useEffect(() => {\n    axios.get(api).then(res => {\n      // setDDDDD(res.data.map((element, i) => {\n      //   element = JSON.parse(JSON.stringify(element).replace('tapons', 'tampons'));\n      //\n      //   return (\n      //     <div className=\"product-wrapper col-4\" key={i}>\n      //       {element.tampons.map((results, index) => {\n      //         return (\n      //           <div className=\"col-6\" key={index}>\n      //             <p>size: {results.size}</p>\n      //           </div>\n      //         )\n      //       })}\n      //     </div>\n      //   );\n      // }))\n      setApiData(res.data.map((element, i) => {\n        element = JSON.parse(JSON.stringify(element).replace('tapons', 'tampons'));\n\n        if (typeof element.tampons === 'string') {\n          const parsedXml = new XMLParser().parseFromString(element.tampons).children;\n          let convertedResult = [];\n          parsedXml.map((el, i) => {\n            el.children.map(inner => {\n              if (inner.value !== 'none') {\n                // console.log(inner.name, inner.value);\n                convertedResult.push({\n                  [inner.name]: inner.value\n                });\n              }\n            });\n          });\n          element.tampons = convertedResult;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-wrapper col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"product-img\",\n            alt: \"missing img\",\n            src: element.productImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: element.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: element.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row additional-info-wrapper\",\n              children: element.tampons.map((results, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"size: \", results.size]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"coating: \", results.coating]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"amount: \", results.amount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 25\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      }));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\"// \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [\"//   \", dddd, \"// \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: apiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 4\n  }, this);\n};\n\n_s(GetData, \"MfmcbvxYq0Rb3H93A+Rn0EHqXcM=\");\n\n_c = GetData;\nexport default GetData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetData\");","map":{"version":3,"sources":["C:/Users/new project/new-project/src/components/apiData.js"],"names":["React","useState","useEffect","axios","XMLParser","GetData","apiData","setApiData","api","get","then","res","data","map","element","i","JSON","parse","stringify","replace","tampons","parsedXml","parseFromString","children","convertedResult","el","inner","value","push","name","productImage","currency","price","results","size","coating","amount","dddd"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './apiData.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport XMLParser from 'react-xml-parser';\r\n\r\nconst GetData = () => {\r\n  const [apiData, setApiData] = useState();\r\n  // const [dddd, setDDDDD] = useState();\r\n  const api = 'https://front-end-test-bvhzjr6b6a-uc.a.run.app';\r\n\r\n  useEffect(() => {\r\n    axios.get(api)\r\n      .then(res => {\r\n        // setDDDDD(res.data.map((element, i) => {\r\n        //   element = JSON.parse(JSON.stringify(element).replace('tapons', 'tampons'));\r\n        //\r\n        //   return (\r\n        //     <div className=\"product-wrapper col-4\" key={i}>\r\n        //       {element.tampons.map((results, index) => {\r\n        //         return (\r\n        //           <div className=\"col-6\" key={index}>\r\n        //             <p>size: {results.size}</p>\r\n        //           </div>\r\n        //         )\r\n        //       })}\r\n        //     </div>\r\n        //   );\r\n        // }))\r\n\r\n        setApiData(res.data.map((element, i) => {\r\n          element = JSON.parse(JSON.stringify(element).replace('tapons', 'tampons'));\r\n\r\n          if (typeof element.tampons === 'string') {\r\n            const parsedXml = new XMLParser().parseFromString(element.tampons).children;\r\n\r\n            let convertedResult = [];\r\n\r\n            parsedXml.map((el, i) => {\r\n              el.children.map((inner) => {\r\n                if (inner.value !== 'none') {\r\n                  // console.log(inner.name, inner.value);\r\n                  convertedResult.push({[inner.name]: inner.value});\r\n                }\r\n              })\r\n            })\r\n\r\n            element.tampons = convertedResult;\r\n          }\r\n\r\n          return (\r\n            <div className=\"product-wrapper col-4\" key={i}>\r\n              <img className=\"product-img\" alt=\"missing img\" src={element.productImage} />\r\n              <p>{element.currency}</p>\r\n              <p>{element.price}</p>\r\n\r\n              <div className=\"container\">\r\n                <div className=\"row additional-info-wrapper\">\r\n                  {element.tampons.map((results, i) => {\r\n                    return (\r\n                      <div className=\"col-6\" key={i}>\r\n                        <p>size: {results.size}</p>\r\n                        <p>coating: {results.coating}</p>\r\n                        <p>amount: {results.amount}</p>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }));\r\n\r\n      })\r\n  },[]);\r\n\r\n  return (\r\n   <div className=\"container\">\r\n     // <div className=\"row\">\r\n     //   {dddd}\r\n     // </div>\r\n\r\n\r\n    <div className=\"row\">\r\n      {apiData}\r\n    </div>\r\n   </div>\r\n  )\r\n};\r\n\r\nexport default GetData;\r\n"]},"metadata":{},"sourceType":"module"}